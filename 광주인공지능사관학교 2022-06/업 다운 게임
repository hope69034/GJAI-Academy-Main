# 5  	컴퓨터가 생각한 숫자를 맞추는 게임을 만들어보자.
# 1~100 사이의 임의의 정답 값(소스내에 상수로 지정)보다 입력된 숫자가 크면 "Down" 출력.
# 임의의 정답 값(소스내에 상수로 지정)보다 입력된 숫자가 작으면 "Up" 출력.
# 임의의 정답 값(소스내에 상수로 지정)보다 입력된 숫자가 같으면 "x회째 정답!"(x는 시도횟수) 출력과 동시에 게임이 종료

# 소스내에 정답이 30일경우
# 50 입력
# Down
# 25 입력
# Up
# 35 입력
#  Down
# 30 입력
#  4회째 정답!

inp=int(input('1~100 사이의 값을 입력하세요: '))
answer = 30     
list_1 = []       # 시도 수 카운트를 위한 빈리스트 선언                 
while inp != 30 :                                     #  인풋이 정답과 다른 동안 인풋 받기
    if   1 <= inp <= 100 :        # 1~100 사이의  
        if 30 > inp :          ## 임의의 정답 값(소스내에 상수로 지정)보다 입력된 숫자가 작으면 "Up" 출력.
              print("Up")
              list_1.append('*')
              inp=int(input('1~100 사이의 값을 입력하세요: '))
        else:              # 1~100 사이의 임의의 정답 값(소스내에 상수로 지정)보다 입력된 숫자가 크면 "Down" 출력.
              print("Down")
              list_1.append('*')
              inp=int(input('1~100 사이의 값을 입력하세요: '))
    else:
            print('1~100 사이의 값이 아닙니다.')
            list_1.append('*')
            inp=int(input('1~100 사이의 값을 입력하세요: '))
else:                       #인풋이 30이면 프린트
     list_1.append('*')
     x = len(list_1)  # 렌으로 원소 수 카운트  -시도 수
     print(f"{x}회째 정답!")
